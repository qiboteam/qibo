[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qibo"
version = "0.2.2"
description = "A framework for quantum computing with hardware acceleration."
authors = ["The Qibo team"]
license = "Apache License 2.0"
readme = "README.md"
homepage = "https://qibo.science/"
repository = "https://github.com/qiboteam/qibo/"
documentation = "https://qibo.science/docs/qibo/stable"
keywords = []
classifiers = [
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Physics",
]
packages = [{ include = "qibo", from = "src" }]
include = ["*.out", "*.yml"]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
scipy = "^1.10.1"
sympy = "^1.11.1"
cma = "^3.3.0"
joblib = "^1.2.0"
matplotlib = "^3.7.0"
psutil = "^5.9.4"
tabulate = "^0.9.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pdbpp = "^0.10.3"
ipython = "^8.12.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
furo = "^2022.12.7"
recommonmark = "^0.7.1"
sphinxcontrib-bibtex = "^2.5.0"
sphinx-markdown-tables = "^0.0.17"
sphinx-copybutton = "^0.5.2"
nbsphinx = "^0.8.12"
ipython = "^8.10.0"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "^7.2.1"
cirq = "^1.1.0"
cvxpy = "^1.3.1"
ply = "^3.11"
scikit-learn = "^1.2.1"
dill = "^0.3.6"
pytest-cov = "^4.0.0"
pylint = "^2.16.2"
qibojit = { git = "https://github.com/qiboteam/qibojit.git" }
tensorflow = { version = "^2.12.0", markers = "sys_platform == 'linux' or sys_platform == 'darwin'" }
# TODO: the marker is a temporary solution due to the lack of the tensorflow-io 0.32.0's wheels for Windows, this package is one of
# the tensorflow requirements
[tool.poe.tasks]
test = "pytest"
lint = "pylint src --errors-only"
lint-warnings = "pylint src --exit-zero"
docs = "make -C doc html"
docs-clean = "make -C doc clean"
test-docs = "make -C doc doctest"


[tool.poetry.group.cuda11]
optional = true

[tool.poetry.group.cuda11.dependencies]
cupy-cuda11x = "^12.0.0"
cuquantum-python-cu11 = "^23.3.0"
qibojit = { git = "https://github.com/qiboteam/qibojit.git" }


[tool.poetry.group.cuda12]
optional = true

[tool.poetry.group.cuda12.dependencies]
cupy-cuda12x = "^12.0.0"
cuquantum-python-cu12 = "^23.3.0"
qibojit = { git = "https://github.com/qiboteam/qibojit.git" }

[tool.pylint.reports]
output-format = "colorized"

[tool.pytest.ini_options]
testpaths = ['tests/']
filterwarnings = ['ignore::RuntimeWarning']
addopts = [
  '--cov=qibo',
  '--cov-append',
  '--cov-report=xml',
  '--cov-report=html',
  '--durations=60',
]
